GWToolset Install
=================

1. Licensing
2. Requirements
3. Configuration
   a. php.ini
   b. DefaultSettings.php
   c. LocalSettings.php
   d. Assign Users
   e. Image Folder Permissions
4. Hidden Categories


Licensing
---------
Licensed under GNU GPL. See LICENSE.txt for more license information.


Requirements
------------
* MediaWiki >= 1.21
* PHP >= 5.3.3
* [PHP cURL support]( http://www.php.net/manual/en/curl.setup.php )
* [PHP finfo extension]( http://www.php.net/manual/en/fileinfo.setup.php )


Configuration
-------------
### `php.ini`
the following can also be set in httpd.conf, httpd-vhosts.conf, or in .htaccess
instead of in php.ini

* `memory_limit = '256M'`


### `DefaultSettings.php`
The following values are usually in the wiki’s `DefaultSettings.php`; if they
are not set as indicated, you can make the changes in the `LocalSettings.php`
file.

* `$wgEnableAPI = true`
* `$wgEnableWriteAPI = true`
* `$wgMaxImageArea = 6.4e7`; // when not using ImageMagick, otherwise leave it as is


### `LocalSettings.php`
The following settings should be added or already present in the
`LocalSettings.php` file :

_enable uploads and url uploading_
* `$wgEnableUploads  = true;`
* `$wgAllowCopyUploads = true;`

_load the extension_
* `require_once( "$IP/extensions/GWToolset/GWToolset.php" );`


### Assign Users
Assign users to the gwtoolset group as appropriate. You can do this on the
Special:UserRights page.


### Image folder permissions
Make sure the wiki’s image folder can be written to by the web server.


### FileBackend security
The extension makes use of a file backend to temporarily store metada files for processing.
Once the extension finishes processing the metadata file, a cleanup job is run in order to
delete it from the file backend. The file backend can be on a local file system or in an online
object store.

Config::$fsbackend_directory sets the name of the file backend directory, which is 'gwtoolset'
by default. The extension attempts to secure this directory using the FileBackend::prepare()
method and passing in noAccess, and noListing parameters, however this security is limited to
apache web servers that allow .htaccess files. please make sure you set-up the appropriate
security for this directory so that the web server can access the files stored under it,
but not the public.


### Hidden Categories
GWToolset adds the following categories to media file uploads. You may want to
add these as hidden categories to your wiki. If this is the case, then add the
behaviour switch __HIDDENCAT__ to the top of the category page for the following:

// category automatically assigned to saved metadata mappings
Category:GWToolset_Metadata_Mappings

// category automatically added to items uploaded by GWToolset
Category:GWToolset_Batch_Upload

// category automatically assigned to metadata files uploaded by GWToolset
Category:GWToolset_Metadata_Sets
